@api_host = http://localhost:5239
@scheduler_endpoint = {{api_host}}/api/scheduler

### ========================================
### SCHEDULER API TESTS
### ========================================

### Test 1: Update CronExpression only
# Updates the cron expression for a job to run every 5 minutes
PATCH {{scheduler_endpoint}}/update
Content-Type: application/json

{
  "jobKey": "UpdateProviders",
  "cronExpression": "0 0/5 * * * ?"
}

### Test 2: Disable a scheduled job
# Disables the job without changing its schedule
PATCH {{scheduler_endpoint}}/update
Content-Type: application/json

{
  "jobKey": "UpdateProviders",
  "enabled": false
}

### Test 3: Enable a scheduled job
# Re-enables a previously disabled job
PATCH {{scheduler_endpoint}}/update
Content-Type: application/json

{
  "jobKey": "UpdateProviders",
  "enabled": true
}

### Test 4: Schedule one-time execution
# Triggers a single execution at a specific time
PATCH {{scheduler_endpoint}}/update
Content-Type: application/json

{
  "jobKey": "UpdateProviders",
  "nextExecutionUtc": "2025-10-06T22:00:00Z"
}

### Test 5: Update CronExpression and Enabled together
# Updates schedule to run at 10:15 AM daily and disables it
PATCH {{scheduler_endpoint}}/update
Content-Type: application/json

{
  "jobKey": "UpdateMaterials",
  "cronExpression": "0 15 10 * * ?",
  "enabled": false
}

### Test 6: Complete update - all fields
# Updates all available fields for maximum control
PATCH {{scheduler_endpoint}}/update
Content-Type: application/json

{
  "jobKey": "UpdateWarehouses",
  "cronExpression": "0 0 8 ? * MON-FRI",
  "enabled": true,
  "nextExecutionUtc": "2025-10-07T08:00:00Z"
}

### Test 7: Daily at 2 AM
# Standard daily job at 2 AM
PATCH {{scheduler_endpoint}}/update
Content-Type: application/json

{
  "jobKey": "UpdateStockPhotoValuations",
  "cronExpression": "0 0 2 * * ?",
  "enabled": true
}

### Test 8: Every hour
# Runs every hour on the hour
PATCH {{scheduler_endpoint}}/update
Content-Type: application/json

{
  "jobKey": "UpdateMerchandiseEntry",
  "cronExpression": "0 0 * * * ?",
  "enabled": true
}

### ========================================
### VALIDATION ERROR TESTS
### ========================================

### Test 9: Missing required JobKey (should return 400)
PATCH {{scheduler_endpoint}}/update
Content-Type: application/json

{
  "cronExpression": "0 0 2 * * ?",
  "enabled": true
}

### Test 10: Invalid cron expression (should return 400)
PATCH {{scheduler_endpoint}}/update
Content-Type: application/json

{
  "jobKey": "UpdateProviders",
  "cronExpression": "invalid cron expression"
}

### Test 11: Non-existent job key (should return 404)
PATCH {{scheduler_endpoint}}/update
Content-Type: application/json

{
  "jobKey": "NonExistentJob",
  "enabled": true
}

### Test 12: Empty body (should return 400)
PATCH {{scheduler_endpoint}}/update
Content-Type: application/json

{}

### Test 13: Past date for next execution
# Note: System behavior may vary - test if it accepts past dates
PATCH {{scheduler_endpoint}}/update
Content-Type: application/json

{
  "jobKey": "UpdateProviders",
  "nextExecutionUtc": "2020-01-01T00:00:00Z"
}

